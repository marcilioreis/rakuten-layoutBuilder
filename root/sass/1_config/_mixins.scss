@mixin border-radius($radius: 5px){
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    -o-border-radius: $radius;
    border-radius: $radius;
}
@mixin opacity($opacity: 1){
    -webkit-opacity: $opacity;
    -moz-opacity: $opacity;
    -ms-opacity: $opacity;
    -o-opacity: $opacity;
    opacity: $opacity;
}
@mixin radiustl($radius: 5px){
    -webkit-border-top-left-radius: $radius;
    -moz-border-top-left-radius: $radius;
    -ms-border-top-left-radius: $radius;
    -o-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
}
@mixin radiustr($radius: 5px){
    -webkit-border-top-right-radius: $radius;
    -moz-border-top-right-radius: $radius;
    -ms-border-top-right-radius: $radius;
    -o-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
}
@mixin radiusbl($radius: 5px){
    -webkit-border-bottom-left-radius: $radius;
    -moz-border-bottom-left-radius: $radius;
    -ms-border-bottom-left-radius: $radius;
    -o-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
}
@mixin radiusbr($radius: 5px){
    -webkit-border-bottom-right-radius: $radius;
    -moz-border-bottom-right-radius: $radius;
    -ms-border-bottom-right-radius: $radius;
    -o-border-bottom-right-radius: $radius;
    border-bottom-right-radius: $radius;
}


@mixin bt-default(
    $font-family: $bt-font-family,
    $font-weight: $bt-font-weight,
    $font-size: $bt-font-size,
    $font-color: $bt-font-color,
    $bt-bg: $bt-bg-main,
    $bt-bg-hover: $bt-bg-main-hover,
    $bt-bg-active: $bt-bg-main-active)
{
    @include box-sizing();
    @include radiusbl(5px);
    @include radiusbr(5px);
    @include radiustl(5px);
    @include radiustr(5px);
    background-color: $bt-bg;
    background: $bt-bg;
    border: 0px;
    color: $font-color;
    display: inline-block;
    font-family: $font-family;
    font-size: $font-size;
    font-weight: $font-weight;
    height: auto;
    text-decoration: none;
    text-indent: 0px;
    -webkit-display: flex;
    -moz-display: flex;
    -ms-display: flex;
    -o-display: flex;
    display: flex;
    justify-content: center;
    flex-direction: column;
    padding: 0px;
    &:hover {
        background-color: $bt-bg-hover;
        background: $bt-bg-hover;
        transition: all 0.3s ease;
    }
    &:active {
        background-color: $bt-bg-active;
        background: $bt-bg-active;
    }
}

@mixin bt-before(
    $content,
    $font-family: $bt-font-family,
    $font-weight: $bt-font-weight,
    $font-size: $bt-font-size,
    $font-color: $bt-font-color){
    font-size: 0px;   
    &:before{
        content: "#{$content}";
        color: $font-color;
        font-family: $font-family;
        font-size: $font-size;
        font-weight: $font-weight;
        text-indent: 0px;
        -webkit-display: flex;
        -moz-display: flex;
        -ms-display: flex;
        -o-display: flex;
        display: flex;
        justify-content: center;
        flex-direction: column;
    }
}

@mixin center-cont(){
    -webkit-display: flex;
    -moz-display: flex;
    -ms-display: flex;
    -o-display: flex;
    display: flex;
    justify-content: center;
    flex-direction: column;
}


@mixin linear-gradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}
@mixin imgbt($img-name, $img-type,  $img-w, $img-h){
    width: $img-w + px;
    height: $img-h + px;
    background: url("#{$img-url}/" + $img-name + "." + $img-type);
    background: {
        repeat: no-repeat;
        color: transparent;
    }
    padding: 0px;
    border: 0px;
    text-indent: -999999px;
    font-size: 0px;
    color: transparent;
}
@mixin box-sizing( $type: border-box ) {
    -webkit-box-sizing: $type;
    -moz-box-sizing: $type;
    -o-box-sizing: $type;
    -ms-box-sizing: $type;
    box-sizing: $type;
}
@mixin bgimg($img){
    background: url("#{$img-url}/" + $img);
}
@mixin bgimage($img){
    background-image: url("#{$img-url}/" + $img);
}

@mixin bgimgpay($img){
    background: url("#{$img-url}/payicons/" + $img + ".png");
}


@mixin fonte($font-family: $font-def, $font-weight: "normal", $font-size: 12px, $font-color: #000){
    font-family: $font-family;
    font-weight: $font-weight;
    font-size: $font-size;
    color: $font-color;
}
@mixin box-shadow($top:0px, $left:0px, $blur: 5px, $color: #000, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $color;
        -moz-box-shadow:inset $top $left $blur $color;
        box-shadow:inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}
@mixin remove-shadow(){
    -webkit-box-shadow:0 0 0 transparent;
    -moz-box-shadow:0 0 0 transparent;
    box-shadow:0 0 0 transparent;
}
@mixin remove-textshadow(){
    -webkit-text-shadow: none;
    -moz-text-shadow: none;
    -ms-text-shadow: none;
    -o-text-shadow: none;
    text-shadow: none;
}
@mixin font-face($style-name, $file, $family, $category:"") {
    $filepath: $font-url + "/" + $family + "/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    }
    %#{$style-name} {
        font: {
            @if $category != "" {
                family: "#{$style-name}", #{$category};
            }
            @else {
                family: "#{$style-name}";
                weight: normal;
            }
        }
    }
}
@mixin text-shadow($horizOffset, $vertOffset, $blur, $color) {
    -webkit-text-shadow: $horizOffset $vertOffset $blur $color;
    -moz-text-shadow: $horizOffset $vertOffset $blur $color;
    -ms-text-shadow: $horizOffset $vertOffset $blur $color; /* IE 10+ */
    -o-text-shadow: $horizOffset $vertOffset $blur $color;
    text-shadow: $horizOffset $vertOffset $blur $color;
}
@mixin flexbox($fb-display, $fb-direction, $fb-wrap, $fb-justify, $fb-align-items, $fb-align-content){
    //display: flex or inline-flex */
    display: -webkit-$fb-display;
    display: -moz-$fb-display;
    display: -ms-$fb-display;
    display: -webkit-$fb-display;
    display: $fb-display;

    //flex-direction: row | row-reverse | column | column-reverse;
    -webkit-flex-direction: $fb-direction;
    -moz-flex-direction: $fb-direction;
    -ms-flex-direction: $fb-direction;
    -o-flex-direction: $fb-direction;
    flex-direction: $fb-direction;
    

    //flex-wrap: nowrap | wrap | wrap-reverse;
    -webkit-flex-wrap: $fb-wrap;
    -moz-flex-wrap: $fb-wrap;
    -ms-flex-wrap: $fb-wrap;
    -o-flex-wrap: $fb-wrap;
    flex-wrap: $fb-wrap;

    //justify-content: flex-start | flex-end | center | space-between | space-around;
    -webkit-justify-content: $fb-justify;
    -moz-justify-content: $fb-justify;
    -ms-justify-content: $fb-justify;
    -o-justify-content: $fb-justify;
    justify-content: $fb-justify;

    //align-items: flex-start | flex-end | center | baseline | stretch;
    -webkit-align-items: $fb-align-items;
    -moz-align-items: $fb-align-items;
    -ms-align-items: $fb-align-items;
    -o-align-items: $fb-align-items;
    align-items: $fb-align-items;

    //align-content: flex-start | flex-end | center | space-between | space-around | stretch;
    -webkit-align-content: $fb-align-content;
    -moz-align-content: $fb-align-content;
    -ms-align-content: $fb-align-content;
    -o-align-content: $fb-align-content;
    align-content: $fb-align-content;

}
@mixin order($order){
    -webkit-order: $order;
    -moz-order: $order;
    -ms-order: $order;
    -o-order: $order;
    order: $order;
}
@mixin display-flex(){
    -webkit-display: flex;
    -moz-display: flex;
    -ms-display: flex;
    -o-display: flex;
    display: flex;
}
@mixin filter($filter-type,$filter-amount) { 
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
}
@mixin select-arrow($img, $img-w, $arrow-percent){
    @include bgimg($img);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-repeat: no-repeat;
    background-position: $arrow-percent center;
    background-color: #FFF;
    background-size: $img-w;
    padding-right: $img-w + 10;
    &::-ms-expand{
        display: none;
    }
}

@mixin clearfix {
    &:after,
    &:before{
        content: "";
        display: table;
        clear: both;
    }
}

@mixin grayscale($value) {
    -webkit-filter: #{"grayscale(#{$value})"};
    -moz-filter: #{"grayscale(#{$value})"};
    filter:#{"grayscale(#{$value})"};
}

@mixin set-icon($content: $fa-var-smile, $size: 20px, $weigth: 900, $color: #000, $brand: ""){
    @if($brand != "") {
        font-family: "Font Awesome 5 Brands";
    } @else {
        font-family: "Font Awesome 5 Free";
    }
    background: none;
    content: $content;
    font-size: $size;
    font-weight: $weigth;
    color: $color;
    text-indent: 0;
}

@mixin transition($property: all, $duration: .3s, $ease: linear){
	-webkit-transition: $property $duration $ease;
	-moz-transition: $property $duration $ease;
	-o-transition: $property $duration $ease;
	transition: $property $duration $ease;
}


@mixin display-grid(){
    display: grid;
    -ms-display: grid;
}

@mixin reset-position(){
    position: inherit;
    top: inherit;
    right: inherit;
    bottom: inherit;
    left: inherit;
}

@mixin content-columns($columnCount, $columnGap: $gridGutterWidth) {
    -webkit-column-count: $columnCount;
       -moz-column-count: $columnCount;
            column-count: $columnCount;
    -webkit-column-gap: $columnGap;
       -moz-column-gap: $columnGap;
            column-gap: $columnGap;
  }
